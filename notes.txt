#: The Temporal dead zone --> 
The let variables have temporal dead zones while the var variables don’t. To understand the temporal dead zone, let’s examine the life
cycles of both var and let variables, which have two steps: creation and execution.

The var variables -->> 
In the creation phase, the JavaScript engine assigns storage spaces to var variables and immediately initializes them to undefined.
In the execution phase, the JavaScript engine assigns the var variables the values specified by the assignments if there are ones.
Otherwise, the var variables remain undefined.
See the execution context for more information.

The let variables -->>
In the creation phase, the JavaScript engine assigns storage spaces to the let variables but does not initialize the variables. Referencing
uninitialized variables will cause a ReferenceError.
The let variables have the same execution phase as the var variables.
The temporal dead zone starts from the block until the let variable declaration is processed. In other words, it is the location where you
cannot access the let variables before they are defined.

In this tutorial, you have learned about the differences between var and let keywords.

-------------------------------------------------------------------------------------------------------------------------------------------

